"use strict";

// 1) Какое будет выведено значение: let x = 5; alert( x++ ); ?

// let x = 5;
// alert(x++);
// Ответ: Сначала вернет 5, а только после этого увеличит на 1 единицу. Поэтому alert вернет 5.
        // alert(++x); в этом случае сначала увеличит на 1, и потом вернет 6

// 2) Чему равно такое выражение: [ ] + false - null + true ?
// console.log([] + false); // false
// console.log(typeof([] + false)); // -> "false"
// console.log([] + false - null); // -> NaN
// console.log([] + false - null + true); // -> NaN
// console.log(typeof([] + false - null + true)); // -> "NaN"
//Ответ: Гланое понимать, что такое пустой массив []. Он вернет "false". Дальше все, что будет с null вернет NaN. Конечный результат "NaN".

// 3) Что выведет этот код: let y = 1; let x = y = 2; alert(x); ?

// let y = 1,
//     x = y = 2; 

// alert(x);

// Ответ: Присваивания и работа кода происходит справа на лево. Сначала y = 2, потом x = y. Итого: x = 2;
// Это последовательное присваивание.

// 4) Чему равна сумма [ ] + 1 + 2?
// console.log([] + 1 + 2); // -> '12'
// Ответ: Так как пустой массив это строка, то из-за этого получится "12".

// 5) Что выведет этот код: alert( "1"[0] )?

// alert( "1"[0] ); // -> 1

// 6) Чему равно 2 && 1 && null && 0 && undefined ?

console.log(2 && 1 && null && 0 && undefined); // null

// Ответ: && запнулся на null - который равен false. Поэтому будет false
// И запинается на лжи false
// ИЛИ запинается на правде true

// 7) Есть ли разница между выражениями? !!( a && b ) и (a && b)?

// console.log(!!( 1 && 2 ) === (1 && 2)); // flase
// Ответ: !! превращают значения в boolean.

// 8) Что выведет этот код: alert( null || 2 && 3 || 4 ); ?
// alert( null || 2 && 3 || 4 );
// Ответ: Надо смотреть таблицу приоритетов опператоров https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/Operator_Precedence
// 2 && 3 - вернет 3
// null || 3 - вернет 3 потому что это true, а null false
// 3 || 4 - вернет 3 потому что ИЛИ запинается на 3, а это true

// 9) a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b ?

const a = [1, 2, 3],
      b = [1, 2, 3];

console.log(a == b); // false

// Ответ: a не равно b. Потому что a и b разные хранилище информации, которые просто похожи. 

// 10) Что выведет этот код: alert( +"Infinity" ); ?
// alert( +"Infinity" ); // Infinity
// Ответ: Выведет Infinity, который будет тип данных число, потому что там стоит + унарное число. 

// 11) Верно ли сравнение: "Ёжик" > "яблоко"?
console.log("Ёжик" > "яблоко"); // false

// Ответ: Сравнение происходит по Unicod. 

// 12) Чему равно 0 || "" || 2 || undefined || true || falsе ?

console.log(0 || "" || 2 || undefined || true || falsе); // 2
// Ответ: Будет 2. Потому что ИЛИ запинаентся на правде true. 

